{"ast":null,"code":"var _jsxFileName = \"/home/jakobkubicki/Desktop/Hackathon/client/src/components/create.js\";\nimport React, { Component } from \"react\"; // This will require to npm install axios\n\nimport axios from 'axios';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button, Modal, ModalHeader } from 'reactstrap';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Record = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.courseTitle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.termDesc\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.courseNumber\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.subjectDescription\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/edit/\" + props.record._id,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this);\n\n_c = Record;\nexport default class RecordList extends Component {\n  // This is the constructor that shall store our data retrieved from the database\n  constructor(props) {\n    super(props);\n    this.deleteRecord = this.deleteRecord.bind(this);\n    this.state = {\n      records: [],\n      students: []\n    };\n  } // This method will get the data from the database.\n\n\n  componentDidMount() {\n    let one = \"http://localhost:5000/record/\";\n    let two = \"http://localhost:5000/student/\";\n    const requestOne = axios.get(one);\n    const requestTwo = axios.get(two);\n    axios.all([requestOne, requestTwo]).then(axios.spread((...responses) => {\n      this.setState({\n        records: responses[0],\n        students: responses[1]\n      });\n    })).catch(function (error) {\n      console.log(error);\n    });\n  } // This method will delete a record based on the method\n\n\n  deleteRecord(id) {\n    axios.delete(\"http://localhost:5000/\" + id).then(response => {\n      console.log(response.data);\n    });\n    this.setState({\n      record: this.state.records.filter(el => el._id !== id)\n    });\n  } // This method will map out the users on the table\n\n\n  recordList() {\n    return this.state.records.map(currentrecord => {\n      return /*#__PURE__*/_jsxDEV(Record, {\n        record: currentrecord,\n        deleteRecord: this.deleteRecord\n      }, currentrecord._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this);\n    });\n  } // recordStudents() {\n  //   return this.state.records.map((currentrecord) => {\n  //     return (\n  //       <Record\n  //         record={currentrecord}\n  //         deleteRecord={this.deleteRecord}\n  //         key={currentrecord._id}\n  //       />\n  //     );\n  //   });\n  // }\n  // This following section will display the table with the records of individuals.\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-sm\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"container-sm width:50px\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Course Catalog\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table table-striped\",\n                style: {\n                  marginTop: 20\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Course Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Term\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Course Number\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Department\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 15\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: this.recordList()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-sm\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"container-sm width:50px\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Course Catalog\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table table-striped\",\n                style: {\n                  marginTop: 20\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Course Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Term\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 115,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Course Number\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 116,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Department\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 15\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: this.recordList()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-sm\",\n        children: \"One of three columns\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Record\");","map":{"version":3,"sources":["/home/jakobkubicki/Desktop/Hackathon/client/src/components/create.js"],"names":["React","Component","axios","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","Button","Modal","ModalHeader","Link","Record","props","record","courseTitle","termDesc","courseNumber","subjectDescription","_id","RecordList","constructor","deleteRecord","bind","state","records","students","componentDidMount","one","two","requestOne","get","requestTwo","all","then","spread","responses","setState","catch","error","console","log","id","delete","response","data","filter","el","recordList","map","currentrecord","render","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// This will require to npm install axios\nimport axios from 'axios';\nimport {\n  Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Button, Modal, ModalHeader\n} from 'reactstrap';\nimport { Link } from \"react-router-dom\";\n\nconst Record = (props) => (\n  <tr>\n    <td >{props.record.courseTitle}</td>\n    <td>{props.record.termDesc}</td>\n    <td>{props.record.courseNumber}</td>\n    <td>{props.record.subjectDescription}</td>\n    <td>\n      <Link to={\"/edit/\" + props.record._id}>Add</Link> \n    </td>\n  </tr>\n);\n\nexport default class RecordList extends Component {\n  // This is the constructor that shall store our data retrieved from the database\n  constructor(props) {\n    super(props);\n    this.deleteRecord = this.deleteRecord.bind(this);\n    this.state = { records: [], students: []};\n  }\n\n  // This method will get the data from the database.\n  componentDidMount() {\n\n    let one = \"http://localhost:5000/record/\"\n    let two = \"http://localhost:5000/student/\"\n\n    const requestOne = axios.get(one);\n    const requestTwo = axios.get(two);\n\n    axios.all([requestOne, requestTwo]).then(axios.spread((...responses) => {\n      this.setState({ records: responses[0], students: responses[1] })\n      })).catch(function (error) {\n        console.log(error);\n      })\n  }\n\n  // This method will delete a record based on the method\n  deleteRecord(id) {\n    axios.delete(\"http://localhost:5000/\" + id).then((response) => {\n      console.log(response.data);\n    });\n\n    this.setState({\n      record: this.state.records.filter((el) => el._id !== id),\n    });\n  }\n\n  // This method will map out the users on the table\n  recordList() {\n    return this.state.records.map((currentrecord) => {\n      return (\n        <Record\n          record={currentrecord}\n          deleteRecord={this.deleteRecord}\n          key={currentrecord._id}\n        />\n      );\n    });\n  }\n\n  // recordStudents() {\n  //   return this.state.records.map((currentrecord) => {\n  //     return (\n  //       <Record\n  //         record={currentrecord}\n  //         deleteRecord={this.deleteRecord}\n  //         key={currentrecord._id}\n  //       />\n  //     );\n  //   });\n  // }\n\n\n  // This following section will display the table with the records of individuals.\n  render() {\n    return (\n\n      <div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-sm\">\n    <div>\n      <div class=\"container-sm width:50px\">\n        <h3>Course Catalog</h3>\n        <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n          <thead>\n            <tr>\n              <th>Course Name</th>\n              <th>Term</th>\n              <th>Course Number</th>\n              <th>Department</th>\n            </tr>\n          </thead>\n          <tbody>{this.recordList()}</tbody>\n        </table>\n      </div>\n      </div>\n    </div>\n    <div class=\"col-sm\">\n    <div>\n      <div class=\"container-sm width:50px\">\n        <h3>Course Catalog</h3>\n        <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n          <thead>\n            <tr>\n              <th>Course Name</th>\n              <th>Term</th>\n              <th>Course Number</th>\n              <th>Department</th>\n            </tr>\n          </thead>\n          <tbody>{this.recordList()}</tbody>\n        </table>\n      </div>\n      </div>\n    </div>\n    </div>\n    <div class=\"col-sm\">\n      One of three columns\n    </div>\n  </div>\n      \n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}