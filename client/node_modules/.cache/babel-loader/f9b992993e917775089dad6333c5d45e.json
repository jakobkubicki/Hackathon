{"ast":null,"code":"var _jsxFileName = \"/home/jakobkubicki/Desktop/Hackathon/client/src/components/create.js\";\nimport React, { Component } from \"react\"; // This will require to npm install axios\n\nimport axios from 'axios';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button, Modal, ModalHeader } from 'reactstrap';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Record = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.courseTitle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.termDesc\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.courseNumber\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.subjectDescription\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Button, {\n    onClick: \"\",\n    children: \"Add\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this);\n\n_c = Record;\n\nconst Current = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.courseTitle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.termDesc\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.courseNumber\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.subjectDescription\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 25,\n  columnNumber: 3\n}, this);\n\n_c2 = Current;\nexport default class RecordList extends Component {\n  // This is the constructor that shall store our data retrieved from the database\n  constructor(props) {\n    super(props);\n    this.deleteRecord = this.deleteRecord.bind(this);\n    this.state = {\n      records: [],\n      students: []\n    };\n  } // This method will get the data from the database.\n\n\n  componentDidMount() {\n    let one = \"http://localhost:5000/record/\";\n    let two = \"http://localhost:5000/student/\";\n    const requestOne = axios.get(one);\n    const requestTwo = axios.get(two);\n    axios.all([requestOne, requestTwo]).then(axios.spread((...responses) => {\n      this.setState({\n        records: responses[0].data,\n        students: responses[1].data\n      });\n    })).catch(function (error) {\n      console.log(error);\n    });\n  } // This method will delete a record based on the method\n\n\n  deleteRecord(id) {\n    axios.delete(\"http://localhost:5000/\" + id).then(response => {\n      console.log(response.data);\n    });\n    this.setState({\n      record: this.state.records.filter(el => el._id !== id)\n    });\n  } // This method will map out the users on the table\n\n\n  recordList() {\n    return this.state.records.map(currentrecord => {\n      return /*#__PURE__*/_jsxDEV(Record, {\n        record: currentrecord,\n        deleteRecord: this.deleteRecord\n      }, currentrecord._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  recordStudents() {\n    return this.state.students.map(currentrecord => {\n      return /*#__PURE__*/_jsxDEV(Current, {\n        record: currentrecord,\n        deleteRecord: this.deleteRecord\n      }, currentrecord._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this);\n    });\n  } // This following section will display the table with the records of individuals.\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-sm\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"container-sm width:50px\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"All courses\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                name: \"row\",\n                className: \"table table-striped\",\n                style: {\n                  marginTop: 20\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Course Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Term\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Course Number\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Department\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 15\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: this.recordList()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-sm\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"container-sm width:50px\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Courses taken\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table table-striped\",\n                style: {\n                  marginTop: 20\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Course Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Term\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Course Number\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Department\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 132,\n                      columnNumber: 15\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: this.recordStudents()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-sm\",\n        children: \"One of three columns\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 3\n    }, this);\n  }\n\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Record\");\n$RefreshReg$(_c2, \"Current\");","map":{"version":3,"sources":["/home/jakobkubicki/Desktop/Hackathon/client/src/components/create.js"],"names":["React","Component","axios","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","Button","Modal","ModalHeader","Link","Record","props","record","courseTitle","termDesc","courseNumber","subjectDescription","Current","RecordList","constructor","deleteRecord","bind","state","records","students","componentDidMount","one","two","requestOne","get","requestTwo","all","then","spread","responses","setState","data","catch","error","console","log","id","delete","response","filter","el","_id","recordList","map","currentrecord","recordStudents","render","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,IADF,EACQC,OADR,EACiBC,QADjB,EAC2BC,QAD3B,EAEEC,SAFF,EAEaC,YAFb,EAE2BC,MAF3B,EAEmCC,KAFnC,EAE0CC,WAF1C,QAGO,YAHP;AAIA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,iBAEb;AAAA,0BACE;AAAA,cAAMA,KAAK,CAACC,MAAN,CAAaC;AAAnB;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA,cAAKF,KAAK,CAACC,MAAN,CAAaE;AAAlB;AAAA;AAAA;AAAA;AAAA,UAFF,eAGE;AAAA,cAAKH,KAAK,CAACC,MAAN,CAAaG;AAAlB;AAAA;AAAA;AAAA;AAAA,UAHF,eAIE;AAAA,cAAKJ,KAAK,CAACC,MAAN,CAAaI;AAAlB;AAAA;AAAA;AAAA;AAAA,UAJF,eAKE,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,eAME;AAAA;AAAA;AAAA;AAAA,UANF;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF;;KAAMN,M;;AAaN,MAAMO,OAAO,GAAIN,KAAD,iBAEd;AAAA,0BACE;AAAA,cAAMA,KAAK,CAACC,MAAN,CAAaC;AAAnB;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA,cAAKF,KAAK,CAACC,MAAN,CAAaE;AAAlB;AAAA;AAAA;AAAA;AAAA,UAFF,eAGE;AAAA,cAAKH,KAAK,CAACC,MAAN,CAAaG;AAAlB;AAAA;AAAA;AAAA;AAAA,UAHF,eAIE;AAAA,cAAKJ,KAAK,CAACC,MAAN,CAAaI;AAAlB;AAAA;AAAA;AAAA;AAAA,UAJF,eAKE;AAAA;AAAA;AAAA;AAAA,UALF;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF;;MAAMC,O;AAaN,eAAe,MAAMC,UAAN,SAAyBpB,SAAzB,CAAmC;AAGhD;AACAqB,EAAAA,WAAW,CAACR,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKS,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,QAAQ,EAAE;AAAzB,KAAb;AACD,GAR+C,CAUhD;;;AACAC,EAAAA,iBAAiB,GAAG;AAElB,QAAIC,GAAG,GAAG,+BAAV;AACA,QAAIC,GAAG,GAAG,gCAAV;AAEA,UAAMC,UAAU,GAAG7B,KAAK,CAAC8B,GAAN,CAAUH,GAAV,CAAnB;AACA,UAAMI,UAAU,GAAG/B,KAAK,CAAC8B,GAAN,CAAUF,GAAV,CAAnB;AAEA5B,IAAAA,KAAK,CAACgC,GAAN,CAAU,CAACH,UAAD,EAAaE,UAAb,CAAV,EAAoCE,IAApC,CAAyCjC,KAAK,CAACkC,MAAN,CAAa,CAAC,GAAGC,SAAJ,KAAkB;AACtE,WAAKC,QAAL,CAAc;AAAEZ,QAAAA,OAAO,EAAEW,SAAS,CAAC,CAAD,CAAT,CAAaE,IAAxB;AAA8BZ,QAAAA,QAAQ,EAAEU,SAAS,CAAC,CAAD,CAAT,CAAaE;AAArD,OAAd;AACC,KAFsC,CAAzC,EAEMC,KAFN,CAEY,UAAUC,KAAV,EAAiB;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAJH;AAKD,GAxB+C,CA0BhD;;;AACAlB,EAAAA,YAAY,CAACqB,EAAD,EAAK;AACf1C,IAAAA,KAAK,CAAC2C,MAAN,CAAa,2BAA2BD,EAAxC,EAA4CT,IAA5C,CAAkDW,QAAD,IAAc;AAC7DJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACP,IAArB;AACD,KAFD;AAIA,SAAKD,QAAL,CAAc;AACZvB,MAAAA,MAAM,EAAE,KAAKU,KAAL,CAAWC,OAAX,CAAmBqB,MAAnB,CAA2BC,EAAD,IAAQA,EAAE,CAACC,GAAH,KAAWL,EAA7C;AADI,KAAd;AAGD,GAnC+C,CAqChD;;;AACAM,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKzB,KAAL,CAAWC,OAAX,CAAmByB,GAAnB,CAAwBC,aAAD,IAAmB;AAC/C,0BACE,QAAC,MAAD;AACE,QAAA,MAAM,EAAEA,aADV;AAEE,QAAA,YAAY,EAAE,KAAK7B;AAFrB,SAGO6B,aAAa,CAACH,GAHrB;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARM,CAAP;AASD;;AAEDI,EAAAA,cAAc,GAAG;AACf,WAAO,KAAK5B,KAAL,CAAWE,QAAX,CAAoBwB,GAApB,CAAyBC,aAAD,IAAmB;AAChD,0BACE,QAAC,OAAD;AACE,QAAA,MAAM,EAAEA,aADV;AAEE,QAAA,YAAY,EAAE,KAAK7B;AAFrB,SAGO6B,aAAa,CAACH,GAHrB;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARM,CAAP;AASD,GA5D+C,CA+DhD;;;AACAK,EAAAA,MAAM,GAAG;AACP,wBACF;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA,8BACA;AAAK,QAAA,KAAK,EAAC,KAAX;AAAA,gCACE;AAAK,UAAA,KAAK,EAAC,QAAX;AAAA,iCACA;AAAA,mCACE;AAAK,cAAA,KAAK,EAAC,yBAAX;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAO,gBAAA,IAAI,EAAC,KAAZ;AAAkB,gBAAA,SAAS,EAAC,qBAA5B;AAAkD,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,SAAS,EAAE;AAAb,iBAAzD;AAAA,wCACE;AAAA,yCACE;AAAA,4CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBADF,eASE;AAAA,4BAAQ,KAAKL,UAAL;AAAR;AAAA;AAAA;AAAA;AAAA,wBATF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADF,eAmBE;AAAK,UAAA,KAAK,EAAC,QAAX;AAAA,iCACA;AAAA,mCACE;AAAK,cAAA,KAAK,EAAC,yBAAX;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAO,gBAAA,SAAS,EAAC,qBAAjB;AAAuC,gBAAA,KAAK,EAAE;AAAEK,kBAAAA,SAAS,EAAE;AAAb,iBAA9C;AAAA,wCACE;AAAA,yCACE;AAAA,4CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBADF,eASE;AAAA,4BAAQ,KAAKF,cAAL;AAAR;AAAA;AAAA;AAAA;AAAA,wBATF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAuCE;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvCF;AAAA;AAAA;AAAA;AAAA;AAAA,YADE;AA8CD;;AA/G+C","sourcesContent":["import React, { Component } from \"react\";\n// This will require to npm install axios\nimport axios from 'axios';\nimport {\n  Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Button, Modal, ModalHeader\n} from 'reactstrap';\nimport { Link } from \"react-router-dom\";\n\nconst Record = (props) => (\n\n  <tr>\n    <td >{props.record.courseTitle}</td>\n    <td>{props.record.termDesc}</td>\n    <td>{props.record.courseNumber}</td>\n    <td>{props.record.subjectDescription}</td>\n    <Button onClick=\"\">Add</Button>\n    <td>\n    </td>\n  </tr>\n);\n\nconst Current = (props) => (\n\n  <tr>\n    <td >{props.record.courseTitle}</td>\n    <td>{props.record.termDesc}</td>\n    <td>{props.record.courseNumber}</td>\n    <td>{props.record.subjectDescription}</td>\n    <td>\n    </td>\n  </tr>\n);\n\n\nexport default class RecordList extends Component {\n\n  \n  // This is the constructor that shall store our data retrieved from the database\n  constructor(props) {\n    super(props);\n    this.deleteRecord = this.deleteRecord.bind(this);\n    this.state = { records: [], students: []};\n  }\n\n  // This method will get the data from the database.\n  componentDidMount() {\n\n    let one = \"http://localhost:5000/record/\"\n    let two = \"http://localhost:5000/student/\"\n\n    const requestOne = axios.get(one);\n    const requestTwo = axios.get(two);\n\n    axios.all([requestOne, requestTwo]).then(axios.spread((...responses) => {\n      this.setState({ records: responses[0].data, students: responses[1].data })\n      })).catch(function (error) {\n        console.log(error);\n      })\n  }\n\n  // This method will delete a record based on the method\n  deleteRecord(id) {\n    axios.delete(\"http://localhost:5000/\" + id).then((response) => {\n      console.log(response.data);\n    });\n\n    this.setState({\n      record: this.state.records.filter((el) => el._id !== id),\n    });\n  }\n\n  // This method will map out the users on the table\n  recordList() {\n    return this.state.records.map((currentrecord) => {\n      return (\n        <Record\n          record={currentrecord}\n          deleteRecord={this.deleteRecord}\n          key={currentrecord._id}\n        />\n      );\n    });\n  }\n\n  recordStudents() {\n    return this.state.students.map((currentrecord) => {\n      return (\n        <Current\n          record={currentrecord}\n          deleteRecord={this.deleteRecord}\n          key={currentrecord._id}\n        />\n      );\n    });\n  }\n\n\n  // This following section will display the table with the records of individuals.\n  render() {\n    return (\n  <div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-sm\">\n    <div>\n      <div class=\"container-sm width:50px\">\n        <h3>All courses</h3>\n        <table name=\"row\" className=\"table table-striped\" style={{ marginTop: 20 }}>\n          <thead>\n            <tr>\n              <th>Course Name</th>\n              <th>Term</th>\n              <th>Course Number</th>\n              <th>Department</th>\n            </tr>\n          </thead>\n          <tbody>{this.recordList()}</tbody>\n        </table>\n      </div>\n      </div>\n    </div>\n    <div class=\"col-sm\">\n    <div>\n      <div class=\"container-sm width:50px\">\n        <h3>Courses taken</h3>\n        <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n          <thead>\n            <tr>\n              <th>Course Name</th>\n              <th>Term</th>\n              <th>Course Number</th>\n              <th>Department</th>\n            </tr>\n          </thead>\n          <tbody>{this.recordStudents()}</tbody>\n        </table>\n      </div>\n      </div>\n    </div>\n    </div>\n    <div class=\"col-sm\">\n      One of three columns\n    </div>\n  </div>\n      \n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}